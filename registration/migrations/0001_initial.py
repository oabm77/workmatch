# Generated by Django 4.2 on 2023-09-27 02:25

import ckeditor.fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import registration.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Correo Electrónico')),
                ('tipo_id', models.CharField(choices=[('CC', 'Cédula Ciudadania'), ('CE', 'Cedula Extranjeria'), ('TI', 'Tarjeta Identidad'), ('PA', 'Pasaporte'), ('RC', 'Registro civil'), ('NN', 'No Identificado'), ('OTRO', 'Otro')], max_length=20, verbose_name='Tipo de identificación')),
                ('identification', models.CharField(max_length=20, verbose_name='Número de Identificación')),
                ('photo', models.ImageField(blank=True, null=True, upload_to=registration.models.upload_image, verbose_name='Foto de Perfil')),
                ('country', models.CharField(max_length=255, verbose_name='Pais')),
                ('city', models.CharField(max_length=255, verbose_name='Ciudad ')),
                ('addres', models.CharField(max_length=255, verbose_name='Dirección')),
                ('phone', models.CharField(max_length=255, verbose_name='Telefono')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Fecha de Nacimiento')),
                ('ocupation_job', models.CharField(max_length=255, verbose_name='Ocupación')),
                ('relocate', models.BooleanField(default=False, verbose_name='Se puede Desplazar?')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Excerp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('excerption_type', models.IntegerField(choices=[(1, 'Perfil Profesional'), (2, 'Objetivo Profesional'), (3, 'Aptitudinal'), (4, 'Conocimientos y Habilidades'), (5, 'Proyectos Realizados'), (6, 'Experiencia Laboral'), (7, 'Sumario')], verbose_name='Tipo de Excerpcion')),
                ('content', ckeditor.fields.RichTextField(verbose_name='Contenido del Articulo')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Articulo',
                'verbose_name_plural': 'Articulos',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Links',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_link', models.CharField(choices=[('LI', 'LinkedIn'), ('GH', 'Github'), ('WEBSITE', 'Sitio Web Personal'), ('OTHERS', 'Otros')], max_length=50, verbose_name='Tipo de Enlace')),
                ('link', models.URLField(verbose_name='Enlace')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Enlace',
                'verbose_name_plural': 'Enlaces',
                'unique_together': {('user', 'link')},
            },
        ),
    ]
